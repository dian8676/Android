class Robot{

    var name:String?

    var x:Int

    var y:Int

    var distance:Int

    

    init(_ name:String){

        self.x = 100

        self.y = 100

        self.distance = 5

        self.name = name

    }

    

    func move(_ direction:Int){

        var tmp:Int = 0

        switch direction {

        case1: //상

            tmp = self.x - self.distance

        case2: //하

            tmp = self.x + self.distance

        case3: //좌

            tmp = self.y - self.distance

        case4: //우

            tmp = self.y + self.distance

        default:

            print("[Error]잘못입력하셨습니다.")

        }

        if (tmp >= 0) && (tmp <= 200){

            if (direction == 1) || (direction == 2){

                self.x = tmp

            }elseif (direction == 3) || (direction == 4){

                self.y = tmp

            }

        }

    }

    

    func toString(){

        print(self.name!, terminator : "\\t")

        print(self.x, terminator : "\\t")

        print(self.y, terminator : "\\t")

        print(self.distance, terminator : "\\t")

    }

}

 

class CleaningRobot : Robot{

    var cleaningPower:Int = 0

 

    init(_ name:String, _ cleaningPower:Int){

        self.cleaningPower = cleaningPower

        super.init(name)

        x = 30

        y = 30

        distance = 3

    }

    

    func cleaningPowerUp(_ num:Int){

        let tmp = self.cleaningPower + num

        if tmp <= 10{

            self.cleaningPower = tmp

        }else{

            print("최대 Power은 10입니다. 최대로설정합니다.")

            self.cleaningPower = 10

        }

    }

 

    func cleaningPowerDown(_ num:Int){

        let tmp = self.cleaningPower - num

        if tmp >= 0 {

            self.cleaningPower = tmp

        }else{

            print("최소 Power은 0입니다. 최소로설정합니다.")

            self.cleaningPower = 0

        }

    }

    

    overridefunc toString() {

        super.toString()

        print("cleaningPower = ", cleaningPower, terminator : "\\t")

    }

}

 

class DogRobot : Robot{

    var barkPower:Int = 0

    

    init(_ name:String, _ barkPower:Int){

        self.barkPower = barkPower

        super.init(name)

        x = 150

        y = 150

        distance = 10

    }

    

    func barkUp(_ num:Int){

        let tmp = self.barkPower + num

        if tmp <= 10{

            self.barkPower = tmp

        }else{

            print("최대 Power은 10입니다. 최대로설정합니다.")

            self.barkPower = 10

        }

 

    }

    func barkDown(_ num:Int){

        let tmp = self.barkPower - num

        if tmp >= 0 {

            self.barkPower = tmp

        }else{

            print("최소 Power은 0입니다. 최소로설정합니다.")

            self.barkPower = 0

        }

    }

    

    overridefunc toString() {

        super.toString()

        print("BarkPower = ", barkPower, terminator : "\\t")

    }

}

 

func inputPower() -> Int{

    let input = readLine()!

    iflet power = Int(input){

        if(power >= 0&& power <= 10){

            return power

        }else{

            print("[Error]Power의범위는 0 이상 10 이하입니다.")

        }

    }

    print("다시입력해주세요. : ", terminator : "")

    returninputPower()

}

 

var robotList:[Robot] = []

 

robotList.append(Robot("dd"))

robotList.append(CleaningRobot("ww",3))

robotList.append(DogRobot("rr",7))

robotList.append(CleaningRobot("qq",8))

robotList.append(CleaningRobot("xx",4))

robotList.append(DogRobot("aa",9))

 

func robotListPrint(){

    print("")

    print("id  이름\\tx\\ty\\t거리\\tetc")

    print("------------------------------------------")

    for i in0..<robotList.count{

        print(i+1,terminator : "\\t")

        robotList[i].toString()

        print("")

    }

    print("")

}

 

func robotTypePrint(_ type:String){

    var temp:Int

    switch type {

    case"clean":

        temp = 3

    case"dog":

        temp = 10

    default:

        temp = 0

    }

    print("")

    print("id  이름\\tx\\ty\\t거리\\tetc")

    print("------------------------------------------")

    for i in0..<robotList.count{

        let distance = robotList[i].distance

        if distance == temp {

            print(i+1,terminator : "\\t")

            robotList[i].toString()

            print("")

        }

    }

    print("")

}

 

while(true){

    print("===========================")

    print("1. 로봇데이터입력")

    print("2. 로봇리스트보기")

    print("3. 로봇모두이동(상, 하, 좌, 우)")

    print("4. Cleaning Robot 조정")

    print("5. Dog Robot 조정")

    print("6. 로봇삭제")

    print("===========================\\n")

    

    print("번호입력 : ",terminator : "")

    let input = readLine()!

    let number = Int(input)

    

    iflet number = Int(input){

        switch number{

        case1:

            print("(1) 로봇데이터입력")

            print("제품종류는? (r:Robot, c:CleaningRobot, d:DogRobot) : ",terminator : "")

            let robotType = readLine()!

            

            print("로봇이름 : ",terminator :"")

            let robotName = readLine()!

            

            switch robotType{

            case"r":

                robotList.append(Robot(robotName))

            case"c":

                print("Cleaning Power : ", terminator : "")

                let cPower = inputPower()

                robotList.append(CleaningRobot(robotName,cPower))

            case"d":

                print("Bark Power : ", terminator : "")

                let bPower = inputPower()

                 robotList.append(DogRobot(robotName,bPower))

            default:

                print("[Error]로봇의종류를잘못입력했습니다.")

            }

            print("")

        case2:

            print("(2) 로봇리스트보기")

            robotListPrint()

        case3:

            print("(3) 로봇모두일괄이동")

            print("입력(상:1, 하:2, 좌:3, 우:4) : ",terminator:"")

            let inputNum = readLine()!

            iflet num = Int(inputNum){

                if num > 0&& num < 5{

                    for i inrobotList{

                        i.move(num)

                    }

                    robotListPrint()

                }else{

                    print("[Error]해당숫자가없습니다.")

                }

            }else{

                print("[Error]숫자를입력해주세요.")

            }

            print("")

        case4:

            print("(4) Cleaning Robot 조정")

            robotTypePrint("clean")

            

            print("로봇번호선택 : ", terminator : "")

            let inputNum = readLine()!

            iflet robotNum = Int(inputNum){

                if robotNum > 0&& robotNum <= robotList.count{

                    iflet tmpRobot : CleaningRobot = robotList[robotNum-1] as? CleaningRobot{

                        print("up / down: ", terminator : "")

                        let ud = readLine()!

                        print("조정숫자입력 : ", terminator : "")

                        let inputNumber = readLine()!

                        iflet num = Int(inputNumber){

                            switch ud{

                            case"up" :

                                tmpRobot.cleaningPowerUp(num)

                            case"down" :

                                tmpRobot.cleaningPowerDown(num)

                            default:

                                print("up/down을잘못입력하셨습니다.")

                            }

                        }else{  //조정숫자 : 숫자아님

                            print("[Error]잘못입력했습니다.")

                        }

                    }else{ // CleaningRobot 아님

                        print("[Error]\\(robotNum)번로봇은 Cleaning Robot이아닙니다.")

                    }

                }else{  // robotNum : 로봇이없음

                    print("[Error]없는번호입니다.")

                }

            }else{  //robotNum : 숫자아님

                print("[Error]숫자를입력해주세요.")

            }

            print("")

        case5:

            print("(5) dog Robot 조정")

            robotTypePrint("dog")

            

            print("로봇번호선택 : ", terminator : "")

            let inputNum = readLine()!

            iflet robotNum = Int(inputNum){

                if robotNum > 0&& robotNum <= robotList.count{

                    iflet tmpRobot : DogRobot = robotList[robotNum-1] as? DogRobot{

                        print("up / down: ", terminator : "")

                        let ud = readLine()!

                        print("조정숫자입력 : ", terminator : "")

                        let inputNumber = readLine()!

                        iflet num = Int(inputNumber){

                            switch ud{

                            case"up" :

                                tmpRobot.barkUp(num)

                            case"down" :

                                tmpRobot.barkDown(num)

                            default:

                                print("[Error]up/down을잘못입력하셨습니다.")

                            }

                        }else{  //조정숫자 : 숫자아님

                            print("[Error]잘못입력했습니다.")

                        }

                    }else{ // DogRobot 아님

                        print("[Error]\\(robotNum)번로봇은 Dog Robot이아닙니다.")

                    }

                }else{  // robotNum : 로봇이없음

                    print("[Error]없는번호입니다.")

                }

            }else{  //robotNum : 숫자아님

                print("[Error]숫자를입력해주세요.")

            }

            

            print("")

        case6:

            print("(6) 로봇데이터삭제")

            robotListPrint()

            print("삭제할로봇번호입력 : ", terminator:"")

            let inputRNum = readLine()!

            iflet rNum = Int(inputRNum){

                if rNum > 0&& rNum <= robotList.count{

                    robotList.remove(at: rNum-1)

                }else{

                    print("[Error]없는번호입니다.")

                }

            }else{

                print("[Error]숫자를입력해주세요.")

            }

            

            print("")

        default:

            print("[Error]해당숫자가아닙니다. 다시입력하세요.")

        }

 

    }

    

 

}